name: deploy

on:
  push:
    branches:
      - main
      - go/v1

jobs:
  # push-to-ftp:
  #   if: "contains(github.event.head_commit.message, '[deploy]')"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Sed Config Base
  #       shell: bash
  #       run: |
  #         sed -i  's#VITE_PUBLIC_PATH\s*=.*#VITE_PUBLIC_PATH = /next/#g' ./.env.production
  #         sed -i  "s#VITE_BUILD_COMPRESS\s*=.*#VITE_BUILD_COMPRESS = 'gzip'#g" ./.env.production
  #         cat ./.env.production

  #     - name: use Node.js 14
  #       uses: actions/setup-node@v2.1.2
  #       with:
  #         node-version: '14.x'

  #     - name: Get yarn cache
  #       id: yarn-cache
  #       run: echo "::set-output name=dir::$(yarn cache dir)"

  #     - name: Cache dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: ${{ steps.yarn-cache.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-

  #     - name: Build
  #       run: |
  #         yarn install
  #         yarn run build

  #     - name: Deploy
  #       uses: SamKirkland/FTP-Deploy-Action@2.0.0
  #       env:
  #         FTP_SERVER: ${{ secrets.FTP_SERVER }}
  #         FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
  #         FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
  #         METHOD: sftp
  #         PORT: ${{ secrets.FTP_PORT }}
  #         LOCAL_DIR: dist
  #         REMOTE_DIR: /srv/www/vben-admin
  #         ARGS: --delete --verbose --parallel=80

  push-to-gh-pages:
    if: "contains(github.event.head_commit.message, '[stage]') || github.event_name == 'workflow_dispatch'"
    runs-on: ubuntu-latest
    environment: github-pages
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.MY_REPO_PAT }}
          submodules: recursive

      - name: Sed Config Base
        shell: bash
        env:
          VITE_GLOB_API_URL: ${{ secrets.VITE_GLOB_API_URL }}
          VITE_GLOB_UPLOAD_URL: ${{ secrets.VITE_GLOB_UPLOAD_URL }}
          VITE_GLOB_API_URL_PREFIX: ${{ secrets.VITE_GLOB_API_URL_PREFIX }}
        run: |
          sed -i 's#VITE_PUBLIC_PATH\s*=.*#VITE_PUBLIC_PATH = /yummy-backend/#g' ./.env.production
          sed -i "s#VITE_BUILD_COMPRESS\s*=.*#VITE_BUILD_COMPRESS = 'gzip'#g" ./.env.production
          if [ -n "${VITE_GLOB_API_URL}" ]; then
            sed -i "s#VITE_GLOB_API_URL\s*=.*#VITE_GLOB_API_URL = '$VITE_GLOB_API_URL'#g" ./.env.production
          fi
          if [ -n "${VITE_GLOB_UPLOAD_URL}" ]; then
            sed -i "s#VITE_GLOB_UPLOAD_URL\s*=.*#VITE_GLOB_UPLOAD_URL = '$VITE_GLOB_UPLOAD_URL'#g" ./.env.production
          fi
          if [ -n "${VITE_GLOB_API_URL_PREFIX}" ]; then
            sed -i "s#VITE_GLOB_API_URL_PREFIX\s*=.*#VITE_GLOB_API_URL_PREFIX = '$VITE_GLOB_API_URL_PREFIX'#g" ./.env.production
          fi
          cat ./.env.production

      - name: use Node.js 16
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '16.x'

      - name: Setup buf action
        uses: bufbuild/buf-setup-action@v1

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Set SSH Environment
        env:
          DOCS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$ACTIONS_DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com > ~/.ssh/known_hosts
          chmod 700 ~/.ssh && chmod 600 ~/.ssh/*
          git config --local user.email "robot@nobody.local"
          git config --local user.name "robot"

      - name: Delete gh-pages branch
        run: |
          if [ `git rev-parse --verify gh-pages 2>/dev/null` ]
          then
            git push -f origin --delete gh-pages
          fi

      - name: Build
        run: |
          yarn install
          make buf
          yarn run build
          touch dist/.nojekyll
          cp dist/index.html dist/404.html

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v2.5.0
        env:
          ACTIONS_DEPLOY_KEY: ${{secrets.ACTIONS_DEPLOY_KEY}}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: ./dist
        with:
          forceOrphan: true
